/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:		Crestron Electronics, Inc.
System Name:
System Number:
Programmer:			PAC
Comments:
*/
/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
#SYMBOL_NAME "Cisco Touch 10 Room Control Text Box v1.0"
// #HINT ""
// #DEFINE_CONSTANT
// #CATEGORY "" 
#CATEGORY "20" // Conferencing
// #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
// #OUTPUT_SHIFT 
#HELP_PDF_FILE "Cisco Touch 10 Room Control Text Box Help.pdf"
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
// #ENABLE_TRACE
/*#HELP_BEGIN
	this module will send text to a text box on the Cisco panel. Clearing the text will set
	the text box on the Cisco to its default value. It does not connect to the processor
	module as the Cisco does not send events for text boxes.
#HELP_END*/
/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
BUFFER_INPUT	_skip_, textToSend[250];

STRING_OUTPUT	_skip_, toProcessorModule;
/*******************************************************************************************
  Parameters
  (Uncomment and declare parameters as needed)
*******************************************************************************************/
STRING_PARAMETER	paramWidgetId[250];
/*******************************************************************************************
  Parameter Properties
  (Uncomment and declare parameter properties as needed)
*******************************************************************************************/
#BEGIN_PARAMETER_PROPERTIES paramWidgetId
	propValidUnits = unitString;
	propDefaultUnit = unitString;
	propDefaultValue = "widget_1";
	propShortDescription = "enter the widget id (this is case sensitive)";
#END_PARAMETER_PROPERTIES
/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
STRING _textToSend[250];
/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/
function sendText()
{
	makestring(toProcessorModule, "xCommand UserInterface Extensions Widget SetValue Value: \x22%s\x22 WidgetId: \x22%s\x22\n",
				_textToSend, paramWidgetId);
	_textToSend = "";
}
/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/
CHANGE textToSend
{
	_textToSend = textToSend;
	clearbuffer(textToSend);
	sendText();
}
/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/
Function Main()
{
	WaitForInitializationComplete();
	_textToSend = "";
}
